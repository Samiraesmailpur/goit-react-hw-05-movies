{"version":3,"file":"static/js/247.f26d2092.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/fetchMovie.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCredits } from 'services/fetchMovie';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getCast() {\n      const response = await fetchCredits(movieId);\n      setCast(response);\n    }\n    getCast();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://suzmakelaars.nl/wp-content/uploads/2019/11/user-placeholder-4-e1574089236199.png';\n\n  return (\n    <ul style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {cast.map(({ cast_id, original_name, profile_path, character }) => (\n        <li key={cast_id} style={{ width: '25%' }}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                : defaultImg\n            }\n            alt=\"\"\n            width={120}\n            height={150}\n          />\n          <p>{original_name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n","const API_KEY = '778514cd0c35430bd38f659c52db3e68';\nconst URL_TRENDING_MOVIE = 'https://api.themoviedb.org/3/trending/movie/week?';\nconst URL_BY_NAME = 'https://api.themoviedb.org/3/search/movie?';\nconst URL_BY_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchTrendingMovie() {\n  const response = await fetch(\n    `${URL_TRENDING_MOVIE}api_key=${API_KEY}&total_pages=20`\n  );\n  const trendingMovie = await response.json();\n  return trendingMovie.results;\n}\n\nasync function fetchMovies(searchQuery) {\n  const response = await fetch(\n    `${URL_BY_NAME}api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n\n  const movies = await response.json();\n  return movies.results;\n}\n\nasync function fetchMovieById(id) {\n  const response = await fetch(`${URL_BY_ID}${id}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchCredits(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/credits?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.cast;\n}\n\nasync function fetchReviews(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/reviews?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n}\n\nasync function fetchVideos(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/videos?api_key=${API_KEY}`);\n  const data = await response.json();\n  console.log(response);\n  return data.results;\n}\n\nexport {\n  fetchTrendingMovie,\n  fetchMovies,\n  fetchMovieById,\n  fetchCredits,\n  fetchReviews,\n  fetchVideos,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","useEffect","fetchCredits","response","getCast","style","display","flexWrap","map","cast_id","original_name","profile_path","character","width","src","alt","height","API_KEY","URL_TRENDING_MOVIE","URL_BY_NAME","URL_BY_ID","fetchTrendingMovie","fetch","json","trendingMovie","results","fetchMovies","searchQuery","movies","fetchMovieById","id","data","fetchReviews","fetchVideos","console","log","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}