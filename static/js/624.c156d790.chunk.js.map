{"version":3,"file":"static/js/624.c156d790.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/Trailer/Trailer.styled.jsx","components/Trailer/Trailer.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovie.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BackLink = styled(Link)`\n  color: #000;\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 20px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  width: 100px;\n`;\n\nconst Title = styled.h2`\n  font-size: 25px;\n`;\n\nconst Subtitle = styled.p`\n  font-size: 20px;\n`;\n\nconst MovieContainer = styled.div`\n  display: flex;\n\n`;\n\nconst About = styled.div`\n  color: #fff;\n  margin-left: 30px;\n`;\n\nconst LinkItem = styled(NavLink)`\n  color: #fff;\n  border: 1px solid white;\n  padding: 6px 12px;\n  border-radius: 14px;\n  display: block;\n  max-width: 60px;\n  width: 100%;\n  text-align: center;\n  transition: 300ms;\n\n  :hover {\n    background-color: #fff;\n    color: #000;\n  }\n\n  &.active {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Item = styled.li`\n  margin: 20px;\n`;\nexport {\n  BackLink,\n  MovieContainer,\n  About,\n  Title,\n  Subtitle,\n  LinkItem,\n  List,\n  Item,\n};\n","import styled from 'styled-components';\n\nconst OpenModal = styled.button`\n  display: block;\n  width: 100%;\n  border: none;\n  background-color: #b22222;\n  padding: 14px 28px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  transition: all 300ms ease-out;\n  color: #fff;\n  border: 1px solid white;\n\n  :hover {\n    background-color: #fff;\n    transform: scale(1.02);\n    color: #000;\n  }\n`;\n\nexport { OpenModal };\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchVideos } from '../../services/fetchMovie';\nimport Modal from 'react-modal';\nimport { OpenModal } from './Trailer.styled';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: '0',\n    background: 'none',\n    border: 'none',\n    backgroundSize: 'contain',\n  },\n  overlay: {\n    zIndex: '2',\n    backgroundColor: 'rgba(7, 6, 6, 0.75)',\n  },\n};\n\nModal.setAppElement('#root');\n\nconst Trailer = () => {\n  const { movieId } = useParams();\n  const [video, setVideo] = useState(null);\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    async function getVideo() {\n      const video = await fetchVideos(movieId);\n      setVideo(video[0]);\n    }\n    getVideo();\n  }, [movieId]);\n\n  if (!video) {\n    return null;\n  }\n\n  return (\n    <div>\n      <OpenModal onClick={openModal}>Watch trailer</OpenModal>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <iframe\n          width=\"700\"\n          height=\"550\"\n          src={`https://www.youtube.com/embed/${video.key}`}\n          title={video.name}\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></iframe>\n      </Modal>\n    </div>\n  );\n};\nexport default Trailer;\n","import { useEffect, useState } from 'react';\nimport { fetchMovieById } from '../../services/fetchMovie';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { BsArrowLeftCircleFill } from 'react-icons/bs';\nimport {\n  BackLink,\n  MovieContainer,\n  About,\n  Title,\n  Subtitle,\n  LinkItem,\n  List,\n  Item,\n} from './MovieItem.styled';\nimport Trailer from '../../components/Trailer/Trailer';\n\nconst MovieItem = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieById() {\n      const response = await fetchMovieById(movieId);\n      setMovie(response);\n    }\n    getMovieById();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { original_title, release_date, overview, poster_path, vote_average } =\n    movie;\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <BsArrowLeftCircleFill style={{ marginRight: '5px' }} />\n        Go back\n      </BackLink>\n\n      <MovieContainer>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"\"\n            width={400}\n          />\n          <Trailer />\n        </div>\n        <About>\n          <Title>\n            {original_title} ({release_date.slice(0, 4)})\n          </Title>\n          <br />\n          <Subtitle> User Score: </Subtitle>\n          <p>{Math.round(vote_average * 10)} % </p>\n          <br />\n          <Subtitle>Overview:</Subtitle>\n          <p> {overview}</p>\n          <br />\n          <Subtitle> Genre:</Subtitle>\n          <p>\n            {movie.genres.length > 3\n              ? movie.genres\n                  .slice(0, 2)\n                  .map(genre => genre.name)\n                  .concat('Other')\n                  .join(' ')\n              : movie.genres.map(genre => genre.name).join(' ')}\n          </p>\n          <br />\n          <Subtitle>Additional information:</Subtitle>\n          <List>\n            <Item>\n              <LinkItem to={'cast'} state={{ from: backLinkHref }}>\n                Cast\n              </LinkItem>\n            </Item>\n            <Item>\n              <LinkItem to={'reviews'} state={{ from: backLinkHref }}>\n                Reviews\n              </LinkItem>\n            </Item>\n          </List>\n          <Outlet />\n        </About>\n      </MovieContainer>\n    </>\n  );\n};\n\nexport default MovieItem;\n","import MovieItem from '../../components/MovieItem/MovieItem';\n\nconst MovieDetails = () => {\n  return <MovieItem />;\n};\n\nexport default MovieDetails;\n","const API_KEY = '778514cd0c35430bd38f659c52db3e68';\nconst URL_TRENDING_MOVIE = 'https://api.themoviedb.org/3/trending/movie/week?';\nconst URL_BY_NAME = 'https://api.themoviedb.org/3/search/movie?';\nconst URL_BY_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchTrendingMovie() {\n  const response = await fetch(\n    `${URL_TRENDING_MOVIE}api_key=${API_KEY}&total_pages=20`\n  );\n  const trendingMovie = await response.json();\n  return trendingMovie.results;\n}\n\nasync function fetchMovies(searchQuery) {\n  const response = await fetch(\n    `${URL_BY_NAME}api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n\n  const movies = await response.json();\n  return movies.results;\n}\n\nasync function fetchMovieById(id) {\n  const response = await fetch(`${URL_BY_ID}${id}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchCredits(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/credits?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.cast;\n}\n\nasync function fetchReviews(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/reviews?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n}\n\nasync function fetchVideos(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/videos?api_key=${API_KEY}`);\n  const data = await response.json();\n  console.log(response);\n  return data.results;\n}\n\nexport {\n  fetchTrendingMovie,\n  fetchMovies,\n  fetchMovieById,\n  fetchCredits,\n  fetchReviews,\n  fetchVideos,\n};\n"],"names":["BackLink","styled","Link","Title","Subtitle","MovieContainer","About","LinkItem","NavLink","List","Item","OpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","padding","background","border","backgroundSize","overlay","zIndex","backgroundColor","Modal","movieId","useParams","useState","video","setVideo","modalIsOpen","setIsOpen","useEffect","fetchVideos","getVideo","onClick","isOpen","onRequestClose","style","contentLabel","width","height","src","key","title","name","allow","allowFullScreen","movie","setMovie","backLinkHref","useLocation","state","from","fetchMovieById","response","getMovieById","original_title","release_date","overview","poster_path","vote_average","to","alt","slice","Math","round","genres","length","map","genre","concat","join","API_KEY","URL_TRENDING_MOVIE","URL_BY_NAME","URL_BY_ID","fetchTrendingMovie","fetch","json","trendingMovie","results","fetchMovies","searchQuery","movies","id","data","fetchCredits","cast","fetchReviews","console","log"],"sourceRoot":""}