{"version":3,"file":"static/js/257.067be2fc.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovie.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst BackLink = styled(Link)`\n  color: #000;\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 20px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  width: 100px;\n`;\n\nconst Title = styled.h2`\n  font-size: 25px;\n`;\n\nconst Subtitle = styled.p`\n  font-size: 20px;\n`;\n\nconst MovieContainer = styled.div`\n  display: flex;\n`;\n\nconst About = styled.div`\n  color: #fff;\n  margin-left: 30px;\n`;\n\nconst LinkItem = styled(NavLink)`\n  color: #fff;\n  border: 1px solid white;\n  padding: 6px 12px;\n  border-radius: 14px;\n  display: block;\n  max-width: 60px;\n  width: 100%;\n  text-align: center;\n  transition: 300ms;\n\n  :hover {\n    background-color: #fff;\n    color: #000;\n  }\n\n  &.active {\n    background-color: #fff;\n    color: #000;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Item = styled.li`\n  margin: 20px;\n`;\nexport {\n  BackLink,\n  MovieContainer,\n  About,\n  Title,\n  Subtitle,\n  LinkItem,\n  List,\n  Item,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieById } from '../../services/fetchMovie';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { BsArrowLeftCircleFill } from 'react-icons/bs';\nimport {\n  BackLink,\n  MovieContainer,\n  About,\n  Title,\n  Subtitle,\n  LinkItem,\n  List,\n  Item,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieById() {\n      const response = await fetchMovieById(movieId);\n      setMovie(response);\n    }\n    getMovieById();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { original_title, release_date, overview, poster_path, vote_average } =\n    movie;\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>\n        <BsArrowLeftCircleFill style={{ marginRight: '5px' }} />\n        Go back\n      </BackLink>\n\n      <MovieContainer>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"\"\n            width={400}\n          />\n        </div>\n        <About>\n          <Title>\n            {original_title} ({release_date.slice(0, 4)})\n          </Title>\n          <br />\n          <Subtitle> User Score: </Subtitle>\n          <p>{Math.round(vote_average * 10)} % </p>\n          <br />\n          <Subtitle>Overview:</Subtitle>\n          <p> {overview}</p>\n          <br />\n          <Subtitle> Genres:</Subtitle>\n          <p>\n            {movie.genres.length > 3\n              ? movie.genres\n                  .slice(0, 2)\n                  .map(genre => genre.name)\n                  .concat('Other')\n                  .join(' ')\n              : movie.genres.map(genre => genre.name).join(' ')}\n          </p>\n          <br />\n          <Subtitle>Additional information:</Subtitle>\n          <List>\n            <Item>\n              <LinkItem to={'cast'} state={{ from: backLinkHref }}>\n                Cast\n              </LinkItem>\n            </Item>\n            <Item>\n              <LinkItem to={'reviews'} state={{ from: backLinkHref }}>\n                Reviews\n              </LinkItem>\n            </Item>\n          </List>\n          <Outlet />\n        </About>\n      </MovieContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = '778514cd0c35430bd38f659c52db3e68';\nconst URL_TRENDING_MOVIE = 'https://api.themoviedb.org/3/trending/movie/week?';\nconst URL_BY_NAME = 'https://api.themoviedb.org/3/search/movie?';\nconst URL_BY_ID = 'https://api.themoviedb.org/3/movie/';\n\nasync function fetchTrendingMovie() {\n  const response = await fetch(\n    `${URL_TRENDING_MOVIE}api_key=${API_KEY}&total_pages=20`\n  );\n  const trendingMovie = await response.json();\n  return trendingMovie.results;\n}\n\nasync function fetchMovies(searchQuery) {\n  const response = await fetch(\n    `${URL_BY_NAME}api_key=${API_KEY}&query=${searchQuery}&page=1`\n  );\n\n  const movies = await response.json();\n  return movies.results;\n}\n\nasync function fetchMovieById(id) {\n  const response = await fetch(`${URL_BY_ID}${id}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n}\n\nasync function fetchCredits(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/credits?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.cast;\n}\n\nasync function fetchReviews(id) {\n  const response = await fetch(`${URL_BY_ID}${id}/reviews?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n}\n\nexport {\n  fetchTrendingMovie,\n  fetchMovies,\n  fetchMovieById,\n  fetchCredits,\n  fetchReviews,\n};\n"],"names":["BackLink","styled","Link","Title","Subtitle","MovieContainer","About","LinkItem","NavLink","List","Item","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","response","getMovieById","original_title","release_date","overview","poster_path","vote_average","to","style","marginRight","src","alt","width","slice","Math","round","genres","length","map","genre","name","concat","join","API_KEY","URL_TRENDING_MOVIE","URL_BY_NAME","URL_BY_ID","fetchTrendingMovie","fetch","json","trendingMovie","results","fetchMovies","searchQuery","movies","id","data","fetchCredits","cast","fetchReviews"],"sourceRoot":""}